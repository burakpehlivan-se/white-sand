"""
Django settings for travel_recommender project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gfjnxgtx3z&$=v(45g=-6654auh!4c34he)fz^ofz&bt+4(6l0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'recommender', # Yeni eklenen uygulama
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', # allauth için gerekli

    # allauth uygulamaları
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # İsteğe bağlı: Sosyal medya sağlayıcıları (örneğin, Google)
    # 'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware', # allauth middleware'i eklendi
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'travel_recommender.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #'allauth.account.context_processors.account',
                #'allauth.socialaccount.context_processors.socialaccount'
            ],
        },
    },
]

WSGI_APPLICATION = 'travel_recommender.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

"""
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
"""


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

# Login URL
LOGIN_URL = '/accounts/login/'
ACCOUNT_LOGIN_URL = '/accounts/login/'
ACCOUNT_SIGNUP_URL = '/accounts/signup/'

ACCOUNT_FORMS = {
    'signup': 'recommender.forms.SignUpForm',
}

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# django-allauth ayarları
AUTHENTICATION_BACKENDS = (
    # Django admin'e kullanıcı adı ile giriş yapabilmek için gerekli
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` özel kimlik doğrulama metotları, örn: e-posta ile giriş
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1

LOGIN_REDIRECT_URL = '/' # Giriş sonrası yönlendirme
ACCOUNT_EMAIL_VERIFICATION = 'none' # Geliştirme için e-posta doğrulamasını kapat
ACCOUNT_EMAIL_REQUIRED = True # E-posta adresini zorunlu kıl
ACCOUNT_USERNAME_REQUIRED = False # Kullanıcı adını isteğe bağlı yap
ACCOUNT_AUTHENTICATION_METHOD = 'email' # E-posta ile giriş yap

OPENROUTER_API_KEY = os.getenv('OPENROUTER_API_KEY')
OPENROUTER_SITE_URL = 'http://localhost:8000'  # veya canlı siteniz
OPENROUTER_SITE_NAME = 'Tatil Yeri Öneri Platformu'

# DeepSeek API anahtarı
DEEPSEEK_API_KEY = os.getenv('DEEPSEEK_API_KEY')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
